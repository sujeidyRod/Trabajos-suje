{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\52826\\\\Documents\\\\GitHub\\\\sujey11458\\\\sujey\\\\src\\\\App.js\";\n// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport store from './store';\n\n// Componente de contador\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Counter = ({\n  count,\n  increment,\n  decrement\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contador Global\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: increment,\n      children: \"Incrementar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: decrement,\n      children: \"Decrementar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n// Funciones para mapear el estado y las acciones de Redux al componente\n_c = Counter;\nconst mapStateToProps = state => ({\n  count: state.count\n});\nconst mapDispatchToProps = dispatch => ({\n  increment: () => dispatch({\n    type: 'INCREMENT'\n  }),\n  decrement: () => dispatch({\n    type: 'DECREMENT'\n  })\n});\nconst ConnectedCounter = connect(mapStateToProps, mapDispatchToProps)(Counter);\n\n// Renderizamos la aplicación de React\n_c2 = ConnectedCounter;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ConnectedCounter, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nvar _c, _c2;\n$RefreshReg$(_c, \"Counter\");\n$RefreshReg$(_c2, \"ConnectedCounter\");","map":{"version":3,"names":["React","ReactDOM","Provider","connect","store","jsxDEV","_jsxDEV","Counter","count","increment","decrement","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","mapStateToProps","state","mapDispatchToProps","dispatch","type","ConnectedCounter","_c2","render","document","getElementById","$RefreshReg$"],"sources":["C:/Users/52826/Documents/GitHub/sujey11458/sujey/src/App.js"],"sourcesContent":["// index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, connect } from 'react-redux';\nimport store from './store';\n\n// Componente de contador\nconst Counter = ({ count, increment, decrement }) => {\n  return (\n    <div>\n      <h1>Contador Global</h1>\n      <p>{count}</p>\n      <button onClick={increment}>Incrementar</button>\n      <button onClick={decrement}>Decrementar</button>\n    </div>\n  );\n};\n\n// Funciones para mapear el estado y las acciones de Redux al componente\nconst mapStateToProps = (state) => ({\n  count: state.count,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  increment: () => dispatch({ type: 'INCREMENT' }),\n  decrement: () => dispatch({ type: 'DECREMENT' }),\n});\n\nconst ConnectedCounter = connect(mapStateToProps, mapDispatchToProps)(Counter);\n\n// Renderizamos la aplicación de React\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedCounter />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,QAAQ,EAAEC,OAAO,QAAQ,aAAa;AAC/C,OAAOC,KAAK,MAAM,SAAS;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAGA,CAAC;EAAEC,KAAK;EAAEC,SAAS;EAAEC;AAAU,CAAC,KAAK;EACnD,oBACEJ,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAAK,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBT,OAAA;MAAAK,QAAA,EAAIH;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdT,OAAA;MAAQU,OAAO,EAAEP,SAAU;MAAAE,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChDT,OAAA;MAAQU,OAAO,EAAEN,SAAU;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;;AAED;AAAAE,EAAA,GAXMV,OAAO;AAYb,MAAMW,eAAe,GAAIC,KAAK,KAAM;EAClCX,KAAK,EAAEW,KAAK,CAACX;AACf,CAAC,CAAC;AAEF,MAAMY,kBAAkB,GAAIC,QAAQ,KAAM;EACxCZ,SAAS,EAAEA,CAAA,KAAMY,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,CAAC;EAChDZ,SAAS,EAAEA,CAAA,KAAMW,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC;AACjD,CAAC,CAAC;AAEF,MAAMC,gBAAgB,GAAGpB,OAAO,CAACe,eAAe,EAAEE,kBAAkB,CAAC,CAACb,OAAO,CAAC;;AAE9E;AAAAiB,GAAA,GAFMD,gBAAgB;AAGtBtB,QAAQ,CAACwB,MAAM,eACbnB,OAAA,CAACJ,QAAQ;EAACE,KAAK,EAAEA,KAAM;EAAAO,QAAA,eACrBL,OAAA,CAACiB,gBAAgB;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACZ,CAAC,EACXW,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;AAAC,IAAAV,EAAA,EAAAO,GAAA;AAAAI,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAJ,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}