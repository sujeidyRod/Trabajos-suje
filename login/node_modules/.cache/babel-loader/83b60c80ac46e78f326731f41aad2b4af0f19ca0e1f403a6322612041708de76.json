{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\52826\\\\Documents\\\\GitHub\\\\Trabajos-suje\\\\login\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const handleUsernameChange = text => {\n    setUsername(text);\n  };\n  const handlePasswordChange = text => {\n    setPassword(text);\n  };\n  const handleLoginPress = () => {\n    // Aquí puedes agregar la lógica de inicio de sesión\n    if (username === 'usuario' && password === 'contraseña') {\n      setLoggedIn(true);\n    } else {\n      alert('Usuario o contraseña incorrectos');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: loggedIn ? /*#__PURE__*/_jsxDEV(View, {\n      style: styles.loggedInContainer,\n      children: /*#__PURE__*/_jsxDEV(Text, {\n        children: [\"Bienvenido, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(View, {\n      style: styles.loginContainer,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        style: styles.title,\n        children: \"Inicio de Sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Usuario\",\n        onChangeText: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        style: styles.input,\n        placeholder: \"Contrase\\xF1a\",\n        secureTextEntry: true,\n        onChangeText: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TouchableOpacity, {\n        style: styles.loginButton,\n        onPress: handleLoginPress,\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          style: styles.loginButtonText,\n          children: \"Iniciar Sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nqCGvaLcF7xoyk0hDj4EKHqwNas=\");\n_c = App;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ffffffda'\n  },\n  loggedInContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  loginContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  input: {\n    width: 300,\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    paddingHorizontal: 10\n  },\n  loginButton: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5\n  },\n  loginButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","jsxDEV","_jsxDEV","App","_s","loggedIn","setLoggedIn","username","setUsername","password","setPassword","handleUsernameChange","text","handlePasswordChange","handleLoginPress","alert","style","styles","container","children","loggedInContainer","fileName","_jsxFileName","lineNumber","columnNumber","loginContainer","title","input","placeholder","onChangeText","secureTextEntry","loginButton","onPress","loginButtonText","_c","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","width","height","borderColor","borderWidth","borderRadius","paddingHorizontal","paddingVertical","color","$RefreshReg$"],"sources":["C:/Users/52826/Documents/GitHub/Trabajos-suje/login/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUsernameChange = (text) => {\n    setUsername(text);\n  };\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n  };\n\n  const handleLoginPress = () => {\n    // Aquí puedes agregar la lógica de inicio de sesión\n    if (username === 'usuario' && password === 'contraseña') {\n      setLoggedIn(true);\n    } else {\n      alert('Usuario o contraseña incorrectos');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      {loggedIn ? (\n        <View style={styles.loggedInContainer}>\n          <Text>Bienvenido, {username}!</Text>\n        </View>\n      ) : (\n        <View style={styles.loginContainer}>\n          <Text style={styles.title}>Inicio de Sesión</Text>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Usuario\"\n            onChangeText={handleUsernameChange}\n          />\n          <TextInput\n            style={styles.input}\n            placeholder=\"Contraseña\"\n            secureTextEntry\n            onChangeText={handlePasswordChange}\n          />\n          <TouchableOpacity\n            style={styles.loginButton}\n            onPress={handleLoginPress}\n          >\n            <Text style={styles.loginButtonText}>Iniciar Sesión</Text>\n          </TouchableOpacity>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#ffffffda',\n  },\n  loggedInContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  loginContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  input: {\n    width: 300,\n    height: 40,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n  },\n  loginButton: {\n    backgroundColor: '#007bff',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 5,\n  },\n  loginButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n});\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}